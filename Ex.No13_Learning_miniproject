# Ex.No: 10 Learning – Use Supervised Learning  
### DATE: 10/5/2025                                                                          
### REGISTER NUMBER : 212222060023
### AIM: 
To write a program to train the classifier for -----------------.
###  Algorithm:

### Program:
import pandas as pd
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error
import matplotlib.pyplot as plt

# Load the dataset
df = pd.read_csv('/content/sample_data')

# Features and target
X = df[['input_voltage']]
y = df['el_power']

# Split into training and testing sets
split_index = int(len(df) * 0.8)
X_train, X_test = X[:split_index], X[split_index:]
y_train, y_test = y[:split_index], y[split_index:]

# Initialize and train the model
model = LinearRegression()
model.fit(X_train, y_train)

# Predict and evaluate
y_pred = model.predict(X_test)
# Calculate MSE and then take the square root to get RMSE
mse = mean_squared_error(y_test, y_pred)  # Calculate MSE
rmse = mse**0.5  # Calculate RMSE
print(f'RMSE: {rmse:.2f} W')

# Plot actual vs predicted
plt.figure(figsize=(10, 5))
plt.plot(y_test.values, label='Actual')
plt.plot(y_pred, label='Predicted')
plt.legend()
plt.title('Actual vs Predicted Electrical Power')
plt.xlabel('Time')
plt.ylabel('Power (W)')
plt.show()


This repository contains a comprehensive machine learning approach for predicting the electrical power output of a 3-kilowatt micro gas turbine based on input control voltage. The project addresses the challenging task of modeling the temporal dynamics of gas turbines, particularly the time delay between input changes and output response.

![Micro Gas Turbine Electrical Energy Predictionl - Overview Image Placeholder](./figures/3d_rotation.gif)

## Dataset

The dataset consists of 8 time series experiments (6 for training, 2 for testing) representing the gas turbine's behavior under diverse conditions. Each experiment contains:
- Time (seconds)
- Input control voltage (volts)
- Electrical output power (watts)

The time series vary in duration from 6,495 to 11,820 data points with a resolution of approximately 1 second, corresponding to approximately 1.8 to 3.3 hours.

## Features

- **Temporal feature engineering**: Lag features, moving averages, derivatives
- **Advanced modeling**: Multiple ML algorithms for time-series prediction
- **Comprehensive model comparison**: Testing and evaluation of 10 different algorithms
- **3D visualization**: Interactive plots showing relationships between time, voltage, and power
- **Hyperparameter optimization**: Fine-tuning for optimal performance

## Results

Our model comparison reveals that tree-based models perform best for this prediction task:

| Rank | Model | Train RMSE | Test RMSE | Train R² | Test R² | Train MAE | Test MAE |
|------|-------|------------|-----------|----------|---------|-----------|----------|
| 1 | XGBoost | 308.66 | 357.29 | 0.818 | 0.805 | 166.58 | 198.33 |
| 2 | Random Forest | 308.65 | 359.85 | 0.818 | 0.802 | 166.57 | 202.15 |
| 3 | MLP Regressor | 313.61 | 360.74 | 0.812 | 0.801 | 165.52 | 199.05 |
| 4 | Linear Regression | 318.66 | 361.02 | 0.806 | 0.801 | 175.96 | 206.92 |
| 5 | Ridge Regression | 318.86 | 361.20 | 0.806 | 0.801 | 174.87 | 204.97 |
| 6 | Gradient Boosting | 309.11 | 362.62 | 0.817 | 0.799 | 167.25 | 205.79 |
| 7 | LightGBM | 308.70 | 363.12 | 0.818 | 0.798 | 166.78 | 206.17 |
| 8 | Lasso Regression | 327.23 | 368.96 | 0.795 | 0.792 | 182.58 | 207.19 |
| 9 | ElasticNet | 333.81 | 373.96 | 0.787 | 0.786 | 207.47 | 231.14 |
| 10 | SVR | 331.51 | 377.76 | 0.790 | 0.782 | 148.18 | 183.93 |



### Result:
Thus the system was trained successfully and the prediction was carried out.
